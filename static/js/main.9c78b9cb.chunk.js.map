{"version":3,"sources":["components/Infected.js","components/Recovered.js","components/Deaths.js","components/Search.js","components/BarChart.js","App.js","serviceWorker.js","index.js","images/logo.png"],"names":["Infected","numberInfected","time","classes","makeStyles","root","width","borderRadius","title","fontSize","pos","marginBottom","useStyles","bullet","className","Card","CardContent","Typography","color","gutterBottom","variant","component","toLocaleString","CardActions","Button","style","backgroundColor","Recovered","numberRecoveries","c","Deaths","numberDeaths","display","margin","transform","Search","setQuery","query","onChange","e","target","value","id","name","selected","BarChart","stepSize","max","country","substr","Math","round","data","labels","datasets","borderColor","options","responsive","maintainAspectRatio","text","legend","scales","yAxes","ticks","min","App","useState","setNumberInfected","setNumberRecoveries","setNumberDeaths","setTime","useEffect","fetch","then","res","json","confirmed","recovered","deaths","date","Date","lastUpdate","year","getFullYear","month","getMonth","dt","getDate","catch","error","setTimeout","swal","src","Logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.9c78b9cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './Cards.css';\r\n\r\nconst Infected = ({numberInfected, time}) => {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: '100%',\r\n          borderRadius: '10px'\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n      });\r\n      const classes = useStyles();\r\n      const bull = <span className={classes.bullet}>•</span>;\r\n    return (\r\n        <div className='card'>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                         Infected\r\n                    </Typography>\r\n                    <Typography className=\"number\" variant=\"h5\" component=\"h2\">\r\n                        {numberInfected.toLocaleString()}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {time}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                            Number of people infected with\r\n                        <br />\r\n                        COVID-19\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                <Button style={{backgroundColor:\"rgba(157, 30, 179, 0.8)\"}} className='button'></Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Infected;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Recovered = ({numberRecoveries, time}) => {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: '100%',\r\n          borderRadius: '10px'\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n      });\r\n      const classes = useStyles();\r\n      const bull = <span className={classes.bullet}>•</span>;\r\n    return (\r\n        <div className='card'>\r\n            <Card c className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                         Recovered\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                       {numberRecoveries.toLocaleString()}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {time}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                            Number of recoveries from\r\n                        <br />\r\n                        COVID-19\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                <Button style={{backgroundColor:\"rgba(33, 179, 30, 0.8)\"}} className='button'></Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recovered; \r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Deaths = ({numberDeaths, time}) => {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: '100%',\r\n          borderRadius: '10px'\r\n        },\r\n        bullet: {\r\n          display: 'inline-block',\r\n          margin: '0 2px',\r\n          transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n      });\r\n      const classes = useStyles();\r\n      const bull = <span className={classes.bullet}>•</span>;      \r\n    return (\r\n        <div className='card'>\r\n            <Card c className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                         Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {numberDeaths.toLocaleString()}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {time}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                           Number of deaths caused by\r\n                        <br />\r\n                        COVID-19\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                <Button style={{backgroundColor:\"rgba(201, 8, 8, 0.8)\"}} className='button'></Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Deaths;\r\n","import React from 'react'\r\nimport './Search.css'\r\nfunction Search({setQuery, query}) {\r\n    const inputHandler = (e) => {\r\n        if(e.target.value == \"global\") setQuery('')\r\n        else setQuery(`countries/${e.target.value}`)\r\n\r\n    }\r\n    return (\r\n        <div className='search'>\r\n<select onChange={inputHandler} className=\"countries\" id=\"countries\" name=\"countries\">\r\n   <option selected=\"selected\" value=\"global\">Global</option>\r\n   <option value=\"AF\">Afghanistan</option>\r\n   <option value=\"Albania\">Albania</option>\r\n   <option value=\"Algeria\">Algeria</option>\r\n   <option value=\"Andorra\">Andorra</option>\r\n   <option value=\"Angola\">Angola</option>\r\n   <option value=\"Argentina\">Argentina</option>\r\n   <option value=\"Armenia\">Armenia</option>\r\n   <option value=\"Australia\">Australia</option>\r\n   <option value=\"Austria\">Austria</option>\r\n   <option value=\"Azerbaijan\">Azerbaijan</option>\r\n   <option value=\"Bahamas\">Bahamas</option>\r\n   <option value=\"Bahrain\">Bahrain</option>\r\n   <option value=\"Bangladesh\">Bangladesh</option>\r\n   <option value=\"Barbados\">Barbados</option>\r\n   <option value=\"Belarus\">Belarus</option>\r\n   <option value=\"Belgium\">Belgium</option>\r\n   <option value=\"Belize\">Belize</option>\r\n   <option value=\"Benin\">Benin</option>\r\n   <option value=\"Bhutan\">Bhutan</option>\r\n   <option value=\"Bolivia\">Bolivia</option>\r\n   <option value=\"Botswana\">Botswana</option>\r\n   <option value=\"Brazil\">Brazil</option>\r\n   <option value=\"Brunei\">Brunei</option>\r\n   <option value=\"Bulgaria\">Bulgaria</option>\r\n   <option value=\"Burkina Faso\">Burkina Faso</option>\r\n   <option value=\"Burundi\">Burundi</option>\r\n   <option value=\"Cambodia\">Cambodia</option>\r\n   <option value=\"Cameroon\">Cameroon</option>\r\n   <option value=\"Canada\">Canada</option>\r\n   <option value=\"Central African Republic\">Central African Republic</option>\r\n   <option value=\"Chad\">Chad</option>\r\n   <option value=\"Chile\">Chile</option>\r\n   <option value=\"China\">China</option>\r\n   <option value=\"Colombia\">Colombia</option>\r\n   <option value=\"Comoros\">Comoros</option>\r\n   <option value=\"Costa Rica\">Costa Rica</option>\r\n   <option value=\"Croatia\">Croatia</option>\r\n   <option value=\"Cuba\">Cuba</option>\r\n   <option value=\"Cyprus\">Cyprus</option>\r\n   <option value=\"Denmark\">Denmark</option>\r\n   <option value=\"Djibouti\">Djibouti</option>\r\n   <option value=\"Dominica\">Dominica</option>\r\n   <option value=\"Dominican Republic\">Dominican Republic</option>\r\n   <option value=\"Ecuador\">Ecuador</option>\r\n   <option value=\"Egypt\">Egypt</option>\r\n   <option value=\"El Salvador\">El Salvador</option>\r\n   <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n   <option value=\"Eritrea\">Eritrea</option>\r\n   <option value=\"Estonia\">Estonia</option>\r\n   <option value=\"Ethiopia\">Ethiopia</option>\r\n   <option value=\"Fiji\">Fiji</option>\r\n   <option value=\"Finland\">Finland</option>\r\n   <option value=\"France\">France</option>\r\n   <option value=\"Gabon\">Gabon</option>\r\n   <option value=\"Georgia\">Georgia</option>\r\n   <option value=\"Germany\">Germany</option>\r\n   <option value=\"Ghana\">Ghana</option>\r\n   <option value=\"Gibraltar\">Gibraltar</option>\r\n   <option value=\"United Kingdom\">Great Britain</option>\r\n   <option value=\"Greece\">Greece</option>\r\n   <option value=\"Greenland\">Greenland</option>\r\n   <option value=\"Grenada\">Grenada</option>\r\n   <option value=\"Guadeloupe\">Guadeloupe</option>\r\n   <option value=\"Guam\">Guam</option>\r\n   <option value=\"Guatemala\">Guatemala</option>\r\n   <option value=\"Guinea\">Guinea</option>\r\n   <option value=\"Guyana\">Guyana</option>\r\n   <option value=\"Haiti\">Haiti</option>\r\n   <option value=\"Hawaii\">Hawaii</option>\r\n   <option value=\"Honduras\">Honduras</option>\r\n   <option value=\"Hong Kong\">Hong Kong</option>\r\n   <option value=\"Hungary\">Hungary</option>\r\n   <option value=\"Iceland\">Iceland</option>\r\n   <option value=\"Indonesia\">Indonesia</option>\r\n   <option value=\"India\">India</option>\r\n   <option value=\"Iran\">Iran</option>\r\n   <option value=\"Iraq\">Iraq</option>\r\n   <option value=\"Ireland\">Ireland</option>\r\n   <option value=\"Isle of Man\">Isle of Man</option>\r\n   <option value=\"Israel\">Israel</option>\r\n   <option value=\"Italy\">Italy</option>\r\n   <option value=\"Jamaica\">Jamaica</option>\r\n   <option value=\"Japan\">Japan</option>\r\n   <option value=\"Jordan\">Jordan</option>\r\n   <option value=\"Kazakhstan\">Kazakhstan</option>\r\n   <option value=\"Kenya\">Kenya</option>\r\n   <option value=\"Kiribati\">Kiribati</option>\r\n   <option value=\"Korea North\">Korea North</option>\r\n   <option value=\"Korea Sout\">Korea South</option>\r\n   <option value=\"Kuwait\">Kuwait</option>\r\n   <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n   <option value=\"Laos\">Laos</option>\r\n   <option value=\"Latvia\">Latvia</option>\r\n   <option value=\"Lebanon\">Lebanon</option>\r\n   <option value=\"Lesotho\">Lesotho</option>\r\n   <option value=\"Liberia\">Liberia</option>\r\n   <option value=\"Libya\">Libya</option>\r\n   <option value=\"Liechtenstein\">Liechtenstein</option>\r\n   <option value=\"Lithuania\">Lithuania</option>\r\n   <option value=\"Luxembourg\">Luxembourg</option>\r\n   <option value=\"Madagascar\">Madagascar</option>\r\n   <option value=\"Malaysia\">Malaysia</option>\r\n   <option value=\"Malawi\">Malawi</option>\r\n   <option value=\"Maldives\">Maldives</option>\r\n   <option value=\"Mali\">Mali</option>\r\n   <option value=\"Malta\">Malta</option>\r\n   <option value=\"Mauritania\">Mauritania</option>\r\n   <option value=\"Mauritius\">Mauritius</option>\r\n   <option value=\"Mayotte\">Mayotte</option>\r\n   <option value=\"Mexico\">Mexico</option>\r\n   <option value=\"Moldova\">Moldova</option>\r\n   <option value=\"Monaco\">Monaco</option>\r\n   <option value=\"Mongolia\">Mongolia</option>\r\n   <option value=\"Morocco\">Morocco</option>\r\n   <option value=\"Mozambique\">Mozambique</option>\r\n   <option value=\"Nepal\">Nepal</option>\r\n   <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n   <option value=\"Nevis\">Nevis</option>\r\n   <option value=\"New Caledonia\">New Caledonia</option>\r\n   <option value=\"New Zealand\">New Zealand</option>\r\n   <option value=\"Nicaragua\">Nicaragua</option>\r\n   <option value=\"Niger\">Niger</option>\r\n   <option value=\"Nigeria\">Nigeria</option>\r\n   <option value=\"Norway\">Norway</option>\r\n   <option value=\"Oman\">Oman</option>\r\n   <option value=\"Pakistan\">Pakistan</option>\r\n   <option value=\"Panama\">Panama</option>\r\n   <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n   <option value=\"Paraguay\">Paraguay</option>\r\n   <option value=\"Peru\">Peru</option>\r\n   <option value=\"Phillipines\">Philippines</option>\r\n   <option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n   <option value=\"Poland\">Poland</option>\r\n   <option value=\"Portugal\">Portugal</option>\r\n   <option value=\"Qatar\">Qatar</option>\r\n   <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n   <option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n   <option value=\"Reunion\">Reunion</option>\r\n   <option value=\"Romania\">Romania</option>\r\n   <option value=\"Russia\">Russia</option>\r\n   <option value=\"Rwanda\">Rwanda</option>\r\n   <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n   <option value=\"Saipan\">Saipan</option>\r\n   <option value=\"Samoa American\">Samoa American</option>\r\n   <option value=\"San Marino\">San Marino</option>\r\n   <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n   <option value=\"Senegal\">Senegal</option>\r\n   <option value=\"Seychelles\">Seychelles</option>\r\n   <option value=\"Sierra Leone\">Sierra Leone</option>\r\n   <option value=\"Singapore\">Singapore</option>\r\n   <option value=\"Slovakia\">Slovakia</option>\r\n   <option value=\"Slovenia\">Slovenia</option>\r\n   <option value=\"Solomon Islands\">Solomon Islands</option>\r\n   <option value=\"Somalia\">Somalia</option>\r\n   <option value=\"South Africa\">South Africa</option>\r\n   <option value=\"Spain\">Spain</option>\r\n   <option value=\"Sri Lanka\">Sri Lanka</option>\r\n   <option value=\"Sudan\">Sudan</option>\r\n   <option value=\"Suriname\">Suriname</option>\r\n   <option value=\"Swaziland\">Swaziland</option>\r\n   <option value=\"Sweden\">Sweden</option>\r\n   <option value=\"Switzerland\">Switzerland</option>\r\n   <option value=\"Syria\">Syria</option>\r\n   <option value=\"Taiwan\">Taiwan</option>\r\n   <option value=\"Tajikistan\">Tajikistan</option>\r\n   <option value=\"Tanzania\">Tanzania</option>\r\n   <option value=\"Thailand\">Thailand</option>\r\n   <option value=\"Togo\">Togo</option>\r\n   <option value=\"Tokelau\">Tokelau</option>\r\n   <option value=\"Tonga\">Tonga</option>\r\n   <option value=\"TT\">Trinidad & Tobago</option>\r\n   <option value=\"Tunisia\">Tunisia</option>\r\n   <option value=\"Turkey\">Turkey</option>\r\n   <option value=\"Uganda\">Uganda</option>\r\n   <option value=\"United Kingdom\">United Kingdom</option>\r\n   <option value=\"Ukraine\">Ukraine</option>\r\n   <option value=\"AE\">United Arab Emirates</option>\r\n   <option value=\"USA\">United States of America</option>\r\n   <option value=\"Uzbekistan\">Uzbekistan</option>\r\n   <option value=\"Vatican City State\">Vatican City State</option>\r\n   <option value=\"Venezuela\">Venezuela</option>\r\n   <option value=\"Vietnam\">Vietnam</option>\r\n   <option value=\"Yemen\">Yemen</option>\r\n   <option value=\"Zaire\">Zaire</option>\r\n   <option value=\"Zambia\">Zambia</option>\r\n   <option value=\"Zimbabwe\">Zimbabwe</option>\r\n</select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst BarChart = ({numberInfected, numberRecoveries, numberDeaths, query}) => {\r\n\r\n    let stepSize;\r\n    let max;\r\n    let country;\r\n\r\n    query == '' ? country = 'the World' : country = query.substr(10);\r\n\r\n    if(numberInfected <= 30) {\r\n        stepSize = 5;\r\n        max =Math.round((numberInfected + 5)/10)*10;\r\n    }\r\n\r\n    else if(numberInfected > 30 && numberInfected <= 100) {\r\n        stepSize = 10;\r\n        max =Math.round((numberInfected + 10)/10)*10;\r\n    }\r\n\r\n    else if(numberInfected > 100 && numberInfected <= 200) {\r\n        stepSize = 20;\r\n        max =Math.round((numberInfected + 20)/100)*100;\r\n    }\r\n\r\n    else if(numberInfected > 200 && numberInfected <= 500) {\r\n        stepSize = 50;\r\n        max =Math.round((numberInfected + 50)/100)*100;\r\n    }\r\n\r\n    else if(numberInfected > 500 && numberInfected < 1000) {\r\n        stepSize = 100;\r\n        max =Math.round((numberInfected + 100)/100)*100;\r\n    }\r\n\r\n    else if(numberInfected >= 1000 && numberInfected <= 2000) {\r\n        stepSize = 200;\r\n        max =Math.round((numberInfected + 200)/100)*100;\r\n    }\r\n\r\n    else if(numberInfected > 2000 && numberInfected <= 5000) {\r\n        stepSize = 500;\r\n        max =Math.round((numberInfected + 1000)/1000)*1000;\r\n    }\r\n\r\n    else if(numberInfected > 5000 && numberInfected < 10000) {\r\n        stepSize = 1000;\r\n        max =Math.round((numberInfected + 1000)/1000)*1000;\r\n    }\r\n\r\n    else if(numberInfected >= 10000 && numberInfected <= 20000) {\r\n        stepSize = 2000;\r\n        max =Math.round((numberInfected + 2000)/1000)*1000;\r\n    }\r\n\r\n    else if(numberInfected > 20000 && numberInfected <= 50000) {\r\n        stepSize = 5000;\r\n        max =Math.round((numberInfected + 5000)/10000)*10000;\r\n    }\r\n\r\n    else if(numberInfected > 50000 && numberInfected < 100000) {\r\n        stepSize = 10000;\r\n        max =Math.round((numberInfected + 10000)/10000)*10000;\r\n    }\r\n\r\n    else if(numberInfected >= 100000 && numberInfected <= 200000) {\r\n        stepSize = 20000;\r\n        max =Math.round((numberInfected + 20000)/10000)*10000;\r\n    }\r\n\r\n    else if(numberInfected > 200000 && numberInfected <= 400000) {\r\n        stepSize = 40000;\r\n        max =Math.round((numberInfected + 40000)/100000)*100000;\r\n    }\r\n\r\n    else if(numberInfected > 400000 && numberInfected <= 800000) {\r\n        stepSize = 80000;\r\n        max =Math.round((numberInfected + 80000)/100000)*100000;\r\n    }\r\n\r\n    else if(numberInfected > 800000 && numberInfected < 1000000) {\r\n        stepSize = 200000;\r\n        max =Math.round((numberInfected + 200000)/100000)*100000;\r\n    }\r\n\r\n    else if(numberInfected >= 1000000 && numberInfected <= 3200000) {\r\n        stepSize = 250000;\r\n        max =Math.round((numberInfected + 250000)/100000)*100000;\r\n    }\r\n\r\n    else if(numberInfected > 3200000 && numberInfected <= 6400000) {\r\n        stepSize = 640000;\r\n        max =Math.round((numberInfected + 640000)/1000000)*1000000;\r\n    }\r\n\r\n    else if(numberInfected > 6400000 && numberInfected < 10000000) {\r\n        stepSize = 2000000;\r\n        max =Math.round((numberInfected + 2000000)/1000000)*1000000;\r\n    }\r\n\r\n    else if(numberInfected >= 10000000 && numberInfected <= 20000000) {\r\n        stepSize = 2500000;\r\n        max =Math.round((numberInfected + 2000000)/10000000)*10000000;\r\n    }\r\n\r\n    else if(numberInfected > 20000000 && numberInfected <= 40000000) {\r\n        stepSize = 5000000;\r\n        max =Math.round((numberInfected + 5000000)/1000000)*1000000;\r\n    }\r\n\r\n    else if(numberInfected > 40000000 && numberInfected < 100000000) {\r\n        stepSize = 10000000;\r\n        max =Math.round((numberInfected + 10000000)/1000000)*1000000;\r\n    }\r\n\r\n    else if(numberInfected >= 100000000 && numberInfected <= 500000000) {\r\n        stepSize = 20000000;\r\n        max =Math.round((numberInfected + 20000000)/100000000)*100000000;\r\n    }\r\n\r\n    else if(numberInfected > 500000000 && numberInfected < 1000000000) {\r\n        stepSize = 100000000;\r\n        max =Math.round((numberInfected + 100000000)/100000000)*100000000;\r\n    }\r\n\r\n    else {\r\n        stepSize = 200000000;\r\n        max =Math.round((numberInfected + 200000000)/1000000000)*1000000000;\r\n    }\r\n\r\n    const data ={\r\n        labels: [\r\n        'Infected',\r\n        'Recovered',\r\n        'Dead'\r\n        ],\r\n\r\n        datasets: [\r\n            {\r\n                data: [numberInfected, numberRecoveries, numberDeaths],\r\n                borderColor: [\r\n                    'rgba(157, 30, 179, 0.7)',\r\n                    'rgba(33, 179, 30, 0.7)',\r\n                    'rgba(201, 8, 8, 0.7)'\r\n                ],\r\n                backgroundColor: [\r\n                    'rgba(157, 30, 179, 0.7)',\r\n                    'rgba(33, 179, 30, 0.7)',\r\n                    'rgba(201, 8, 8, 0.7)'\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        responsive: \"true\",\r\n        maintainAspectRatio: 'false',\r\n        title : {\r\n            display: \"true\",\r\n            text: `Epidemiological situation in ${country}`\r\n        },\r\n\r\n        legend: {\r\n            display: false\r\n        },\r\n\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: max,\r\n                        stepSize: stepSize\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n         <Bar className=\"ch\" data={data} options={options} />\r\n    )\r\n}\r\n\r\nexport default BarChart;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Infected from './components/Infected';\nimport Recovered from './components/Recovered';\nimport Deaths from './components/Deaths';\nimport Search from './components/Search';\nimport Logo from './images/logo.png';\nimport BarChart from './components/BarChart';\nimport swal from 'sweetalert';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [numberInfected, setNumberInfected] = useState('');\n  const [numberRecoveries, setNumberRecoveries] = useState('');\n  const [numberDeaths, setNumberDeaths] = useState('');\n  const [time, setTime] = useState('');\n  \n  const getData = () => {\n    fetch(`https://covid19.mathdro.id/api/${query}`) \n   .then(res => res.json())\n   .then(data => {\n    setNumberInfected(data.confirmed.value);\n    setNumberRecoveries(data.recovered.value);\n    setNumberDeaths(data.deaths.value);\n    let date = new Date(data.lastUpdate);\n    let year = date.getFullYear();\n    let month = date.getMonth()+1;\n    let dt = date.getDate();\n\n        if (dt < 10) {\n        dt = '0' + dt;\n      }\n        if (month < 10) {\n        month = '0' + month;\n      }\n\n      setTime(`${dt}/${month}/${+year}`); \n   })\n   .catch(error => {\n    setQuery('');\n     setTimeout(() => {\n      swal('This country is not found in the database, try another country.')\n     }, 700);\n   })\n}\n\n  useEffect(() => {\n    getData();\n  }, [query])\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"image\"><img src={Logo} alt=\"\"/></div>\n      <div className=\"cards\">\n          <Infected numberInfected={numberInfected} time={time}/>\n          <Recovered numberRecoveries={numberRecoveries} time={time}/>\n          <Deaths numberDeaths={numberDeaths} time={time} />\n      </div>\n        <div className=\"search-box\">\n          <Search setQuery={setQuery} query={query}/>\n        </div>\n      <div className=\"chart\">\n          <BarChart numberInfected={numberInfected} numberRecoveries={numberRecoveries} numberDeaths={numberDeaths} query={query} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7786bbd4.png\";"],"sourceRoot":""}